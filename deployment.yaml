imports:
- path: vm/content-server-template.jinja
- path: storage/bucket-template.jinja
- path: storage/sql-server-template.jinja
- path: network/network-template.jinja
- path: network/subnetwork-template.jinja
- path: network/firewalls/firewall-http-template.jinja
- path: network/firewalls/firewall-ssh-template.jinja
- path: network/VPN/address-template.jinja
- path: network/VPN/gateway-template.jinja
- path: network/VPN/forwarding-rule-template.jinja
- path: network/VPN/vpn-tunnel-template.jinja


resources:
- name: west-eu-content # Will serve UK and EU
  type: vm/content-server-template.jinja
  properties:
    zone: europe-west2-c

- name: content-bucket
  type: storage/bucket-template.jinja

- name: sql-server
  type: storage/sql-server-template.jinja  ## THE SCHEMA FILE FOR THIS BITCH IS ACTIN UP ----- FIX!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  properties:
    region: europe-west2-c
    tier: db-custom-16-61440  ## Ideally, this would scale

- name: custom
  type: network/network-template.jinja
  properties:
    autoCreateSubnetworks: false

- name: custom
  type: network/subnetwork-template.jinja
  properties:
    ipCidrRange: 10.10.10.0/24
    network: $(ref.custom-network.selfLink)
    region: europe-west2-c

- name: http-firewall
  type: network/firewalls/firewall-http-template.jinja
  properties:
    network: $(ref.custom-network.selfLink)
    IPProtocol: TCP

- name: shh-firewall
  type: network/firewalls/firewall-ssh-template.jinja
  properties:
    network: $(ref.custom-network.selfLink)
    IPProtocol: TCP

- name: static-vpn
  type: network/VPN/address-template.jinja
  properties:
    region: europe-west2

- name: vpn
  type: network/VPN/gateway-template.jinja
  properties:
    region: europe-west2-c
    network: $(ref.custom-network.selfLink)

## ESP forwarding rule
- name: forwarding-rule-esp
  type: network/VPN/forwarding-rule-template.jinja
  properties:
    name: forwarding-rule-esp
    region: europe-west2-c
    IPProtocol: ESP
    IPAddress: $(ref.static-vpn-address.address)
    network: $(ref.custom-network.selfLink)
    target: $(ref.vpn-gateway.selfLink)

## UDP 500 forwarding rule
- name: forwarding-rule-udp500
  type: network/VPN/forwarding-rule-template.jinja
  properties:
    name: forwarding-rule-udp500
    region: europe-west2-c
    IPProtocol: UDP
    IPAddress: $(ref.static-vpn-address.address)
    network: $(ref.custom-network.selfLink)
    target: $(ref.vpn-gateway.selfLink)

## UDP 4500 forwarding rule
- name: forwarding-rule-udp4500
  type: network/VPN/forwarding-rule-template.jinja
  properties:
    name: forwarding-rule-udp4500
    region: europe-west2-c
    IPProtocol: UDP
    IPAddress: $(ref.static-vpn-address.address)
    network: $(ref.custom-network.selfLink)
    target: $(ref.vpn-gateway.selfLink)

## VPN Tunnel
- name: custom
  type: network/VPN/vpn-tunnel-template.jinja
  properties:
    region: europe-west2
    forwardingRule: $(ref.forwarding-rule-udp4500.selfLink)
    ikeVersion: 2 ## Either 1 or 2
    peerIp: $(ref.vpn-gateway.vpnInterfaces[].ipAddress)
    sharedSecret: EVQQq5kYK1tfuB/nvOOn+XX3amOrNqx8 ## generated from https://cloud.google.com/network-connectivity/docs/vpn/how-to/generating-pre-shared-key
    targetVpnGateway: $(ref.vpn-gateway.selfLink)

    

## Converge both firewall templates into single template by adding more properties
## SQL SERVER SCHEMA FILE IS ACTING UP -  Is it tho?

## Link content server and disk storage as well O.O

## oh, and add an SQL server <3 may have to configure it with the firewall as well idk